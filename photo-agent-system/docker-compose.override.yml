services:
  ai_agents:
    build:
      dockerfile: Dockerfile.dev  # Use the development Dockerfile
    ports:
      - "5678:5678"
    environment:
      - FLASK_DEBUG=1
    develop:
      watch:
        - action: sync         # Sync changes from host to container
          path: ./ai_agents      # Source path on your host machine (relative to docker-compose.yml)
          target: /app         # Destination path inside the container (matches WORKDIR in Dockerfile)
          ignore:              # Optional: Specify patterns to ignore syncing
            - __pycache__/
            - '*.pyc'
            - .git
            - venv/                         # Or any virtual environment folder if present
        - action: rebuild                   # Rebuild the image if dependencies change
          path: ./ai_agents/requirements.txt  # Make sure path is correct relative to compose file
    command: ["python", "-Xfrozen_modules=off", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "flask", "run", "--no-reload"]
    
  frontend:
    build:
        dockerfile: Dockerfile.dev  # Use the development Dockerfile
    volumes:
      - ./frontend/src:/app/src
    develop:
        watch:
          - action: sync
            path: ./src
            target: /app/src
          - action: rebuild
            path: package.json
    command: ["yarn", "dev"]

  backend:
    build:
      dockerfile: Dockerfile.dev  # Use the development Dockerfile
    ports:
      - "5679:5678"
    environment:
      - FLASK_DEBUG=1
    develop:
      watch:
        - action: sync         # Sync changes from host to container
          path: ./backend      # Source path on your host machine (relative to docker-compose.yml)
          target: /app         # Destination path inside the container (matches WORKDIR in Dockerfile)
          ignore:              # Optional: Specify patterns to ignore syncing
            - __pycache__/
            - '*.pyc'
            - .git
            - venv/                         # Or any virtual environment folder if present
        - action: rebuild                   # Rebuild the image if dependencies change
          path: ./backend/requirements.txt  # Make sure path is correct relative to compose file
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "flask", "run", "--no-reload"]
  
  json_db:
    build:
        dockerfile: Dockerfile.dev  # Use the development Dockerfile
    ports:
      - "5680:5678"
    environment:
      - FLASK_DEBUG=1
    develop:
      watch:
        - action: sync         # Sync changes from host to container
          path: ./json_db      # Source path on your host machine (relative to docker-compose.yml)
          target: /app         # Destination path inside the container (matches WORKDIR in Dockerfile)
          ignore:              # Optional: Specify patterns to ignore syncing
            - __pycache__/
            - '*.pyc'
            - .git
            - venv/                         # Or any virtual environment folder if present
        - action: rebuild                   # Rebuild the image if dependencies change
          path: ./json_db/requirements.txt  # Make sure path is correct relative to compose file
    #command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "app.py"]
    command: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "flask", "run", "--no-reload"]
  
  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - 11434:11434
  #   volumes:
  #     - .:/code
  #     - ./ollama/ollama:/root/.ollama
  #   container_name: ollama
  #   pull_policy: always
  #   tty: true
  #   restart: always
  #   environment:
  #     - OLLAMA_KEEP_ALIVE=24h
  #     - OLLAMA_HOST=0.0.0.0
  